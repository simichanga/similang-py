{
    "type": "Program",
    "statements": [
        {
            "type": "FunctionStatement",
            "name": {
                "type": "IdentifierLiteral",
                "value": "add"
            },
            "parameters": [
                {
                    "type": "FunctionParameter",
                    "name": "a",
                    "value": null,
                    "value_type": "int"
                },
                {
                    "type": "FunctionParameter",
                    "name": "b",
                    "value": null,
                    "value_type": "int"
                }
            ],
            "body": {
                "type": "BlockStatement",
                "statements": [
                    {
                        "type": "ReturnStatement",
                        "return_value": {
                            "type": "InfixExpression",
                            "left_node": {
                                "type": "IdentifierLiteral",
                                "value": "a"
                            },
                            "operator": "+",
                            "right_node": {
                                "type": "IdentifierLiteral",
                                "value": "b"
                            }
                        }
                    }
                ]
            },
            "return_type": "int"
        },
        {
            "type": "FunctionStatement",
            "name": {
                "type": "IdentifierLiteral",
                "value": "main"
            },
            "parameters": [],
            "body": {
                "type": "BlockStatement",
                "statements": [
                    {
                        "type": "LetStatement",
                        "name": {
                            "type": "IdentifierLiteral",
                            "value": "a"
                        },
                        "value": {
                            "type": "InfixExpression",
                            "left_node": {
                                "type": "InfixExpression",
                                "left_node": {
                                    "type": "IntegerLiteral",
                                    "value": 1
                                },
                                "operator": "+",
                                "right_node": {
                                    "type": "InfixExpression",
                                    "left_node": {
                                        "type": "IntegerLiteral",
                                        "value": 2
                                    },
                                    "operator": "*",
                                    "right_node": {
                                        "type": "IntegerLiteral",
                                        "value": 3
                                    }
                                }
                            },
                            "operator": "-",
                            "right_node": {
                                "type": "IntegerLiteral",
                                "value": 7
                            }
                        },
                        "value_type": "int"
                    },
                    {
                        "type": "ExpressionStatement",
                        "expr": {
                            "type": "CallExpression",
                            "function": {
                                "type": "IdentifierLiteral",
                                "value": "printf"
                            },
                            "arguments": [
                                {
                                    "type": "StringLiteral",
                                    "value": "a starts off as %i\\n"
                                },
                                {
                                    "type": "IdentifierLiteral",
                                    "value": "a"
                                }
                            ]
                        }
                    },
                    {
                        "type": "WhileStatement",
                        "condition": {
                            "type": "InfixExpression",
                            "left_node": {
                                "type": "IdentifierLiteral",
                                "value": "a"
                            },
                            "operator": "<",
                            "right_node": {
                                "type": "IntegerLiteral",
                                "value": 10
                            }
                        },
                        "body": {
                            "type": "BlockStatement",
                            "statements": [
                                {
                                    "type": "ExpressionStatement",
                                    "expr": {
                                        "type": "CallExpression",
                                        "function": {
                                            "type": "IdentifierLiteral",
                                            "value": "printf"
                                        },
                                        "arguments": [
                                            {
                                                "type": "StringLiteral",
                                                "value": "a = %i\\n"
                                            },
                                            {
                                                "type": "IdentifierLiteral",
                                                "value": "a"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "AssignStatement",
                                    "ident": {
                                        "type": "IdentifierLiteral",
                                        "value": "a"
                                    },
                                    "right_value": {
                                        "type": "CallExpression",
                                        "function": {
                                            "type": "IdentifierLiteral",
                                            "value": "add"
                                        },
                                        "arguments": [
                                            {
                                                "type": "IdentifierLiteral",
                                                "value": "a"
                                            },
                                            {
                                                "type": "IntegerLiteral",
                                                "value": 1
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "type": "ReturnStatement",
                        "return_value": {
                            "type": "IdentifierLiteral",
                            "value": "a"
                        }
                    }
                ]
            },
            "return_type": "int"
        }
    ]
}